# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: query.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='query.proto',
  package='fetch.oef.pb',
  serialized_pb=_b('\n\x0bquery.proto\x12\x0c\x66\x65tch.oef.pb\"\xad\x10\n\x05Query\x1a\xa4\x01\n\tAttribute\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x30\n\x04type\x18\x02 \x02(\x0e\x32\".fetch.oef.pb.Query.Attribute.Type\x12\x10\n\x08required\x18\x03 \x02(\x08\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\"0\n\x04Type\x12\t\n\x05\x46LOAT\x10\x00\x12\x07\n\x03INT\x10\x01\x12\x08\n\x04\x42OOL\x10\x02\x12\n\n\x06STRING\x10\x03\x1a\x61\n\tDataModel\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x31\n\nattributes\x18\x02 \x03(\x0b\x32\x1d.fetch.oef.pb.Query.Attribute\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\x1a\x44\n\x05Value\x12\x0b\n\x01s\x18\x01 \x01(\tH\x00\x12\x0b\n\x01\x66\x18\x02 \x01(\x02H\x00\x12\x0b\n\x01\x62\x18\x03 \x01(\x08H\x00\x12\x0b\n\x01i\x18\x04 \x01(\x03H\x00\x42\x07\n\x05value\x1a\x41\n\x08KeyValue\x12\x0b\n\x03key\x18\x01 \x02(\t\x12(\n\x05value\x18\x02 \x02(\x0b\x32\x19.fetch.oef.pb.Query.Value\x1a\x66\n\x08Instance\x12,\n\x05model\x18\x01 \x02(\x0b\x32\x1d.fetch.oef.pb.Query.DataModel\x12,\n\x06values\x18\x02 \x03(\x0b\x32\x1c.fetch.oef.pb.Query.KeyValue\x1a+\n\nStringPair\x12\r\n\x05\x66irst\x18\x01 \x02(\t\x12\x0e\n\x06second\x18\x02 \x02(\t\x1a(\n\x07IntPair\x12\r\n\x05\x66irst\x18\x01 \x02(\x03\x12\x0e\n\x06second\x18\x02 \x02(\x03\x1a*\n\tFloatPair\x12\r\n\x05\x66irst\x18\x01 \x02(\x02\x12\x0e\n\x06second\x18\x02 \x02(\x02\x1a\x92\x01\n\x05Range\x12+\n\x01s\x18\x01 \x01(\x0b\x32\x1e.fetch.oef.pb.Query.StringPairH\x00\x12(\n\x01i\x18\x02 \x01(\x0b\x32\x1b.fetch.oef.pb.Query.IntPairH\x00\x12*\n\x01\x66\x18\x03 \x01(\x0b\x32\x1d.fetch.oef.pb.Query.FloatPairH\x00\x42\x06\n\x04pair\x1a\xa8\x01\n\x08Relation\x12\x31\n\x02op\x18\x01 \x02(\x0e\x32%.fetch.oef.pb.Query.Relation.Operator\x12&\n\x03val\x18\x02 \x02(\x0b\x32\x19.fetch.oef.pb.Query.Value\"A\n\x08Operator\x12\x06\n\x02\x45Q\x10\x00\x12\x06\n\x02LT\x10\x01\x12\x08\n\x04LTEQ\x10\x02\x12\x06\n\x02GT\x10\x03\x12\x08\n\x04GTEQ\x10\x04\x12\t\n\x05NOTEQ\x10\x05\x1a\xc1\x03\n\x03Set\x12,\n\x02op\x18\x01 \x02(\x0e\x32 .fetch.oef.pb.Query.Set.Operator\x12,\n\x04vals\x18\x02 \x02(\x0b\x32\x1e.fetch.oef.pb.Query.Set.Values\x1a\xbe\x02\n\x06Values\x12\x33\n\x01s\x18\x01 \x01(\x0b\x32&.fetch.oef.pb.Query.Set.Values.StringsH\x00\x12\x32\n\x01\x66\x18\x02 \x01(\x0b\x32%.fetch.oef.pb.Query.Set.Values.FloatsH\x00\x12\x31\n\x01\x62\x18\x03 \x01(\x0b\x32$.fetch.oef.pb.Query.Set.Values.BoolsH\x00\x12\x30\n\x01i\x18\x04 \x01(\x0b\x32#.fetch.oef.pb.Query.Set.Values.IntsH\x00\x1a\x14\n\x04Ints\x12\x0c\n\x04vals\x18\x01 \x03(\x03\x1a\x16\n\x06\x46loats\x12\x0c\n\x04vals\x18\x01 \x03(\x02\x1a\x17\n\x07Strings\x12\x0c\n\x04vals\x18\x01 \x03(\t\x1a\x15\n\x05\x42ools\x12\x0c\n\x04vals\x18\x01 \x03(\x08\x42\x08\n\x06values\"\x1d\n\x08Operator\x12\x06\n\x02IN\x10\x00\x12\t\n\x05NOTIN\x10\x01\x1a\xb5\x04\n\nConstraint\x12\x30\n\tattribute\x18\x01 \x02(\x0b\x32\x1d.fetch.oef.pb.Query.Attribute\x12\x41\n\nconstraint\x18\x02 \x02(\x0b\x32-.fetch.oef.pb.Query.Constraint.ConstraintType\x1a\xb1\x03\n\x0e\x43onstraintType\x12?\n\x03or_\x18\x01 \x01(\x0b\x32\x30.fetch.oef.pb.Query.Constraint.ConstraintType.OrH\x00\x12\x41\n\x04\x61nd_\x18\x02 \x01(\x0b\x32\x31.fetch.oef.pb.Query.Constraint.ConstraintType.AndH\x00\x12\'\n\x04set_\x18\x03 \x01(\x0b\x32\x17.fetch.oef.pb.Query.SetH\x00\x12+\n\x06range_\x18\x04 \x01(\x0b\x32\x19.fetch.oef.pb.Query.RangeH\x00\x12\x30\n\x08relation\x18\x05 \x01(\x0b\x32\x1c.fetch.oef.pb.Query.RelationH\x00\x1a\x41\n\x02Or\x12;\n\x04\x65xpr\x18\x01 \x03(\x0b\x32-.fetch.oef.pb.Query.Constraint.ConstraintType\x1a\x42\n\x03\x41nd\x12;\n\x04\x65xpr\x18\x01 \x03(\x0b\x32-.fetch.oef.pb.Query.Constraint.ConstraintTypeB\x0c\n\nconstraint\x1aj\n\x05Model\x12\x33\n\x0b\x63onstraints\x18\x01 \x03(\x0b\x32\x1e.fetch.oef.pb.Query.Constraint\x12,\n\x05model\x18\x02 \x01(\x0b\x32\x1d.fetch.oef.pb.Query.DataModelB\x02H\x01')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_QUERY_ATTRIBUTE_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='fetch.oef.pb.Query.Attribute.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FLOAT', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BOOL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STRING', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=156,
  serialized_end=204,
)
_sym_db.RegisterEnumDescriptor(_QUERY_ATTRIBUTE_TYPE)

_QUERY_RELATION_OPERATOR = _descriptor.EnumDescriptor(
  name='Operator',
  full_name='fetch.oef.pb.Query.Relation.Operator',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EQ', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LTEQ', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GTEQ', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOTEQ', index=5, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=930,
  serialized_end=995,
)
_sym_db.RegisterEnumDescriptor(_QUERY_RELATION_OPERATOR)

_QUERY_SET_OPERATOR = _descriptor.EnumDescriptor(
  name='Operator',
  full_name='fetch.oef.pb.Query.Set.Operator',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOTIN', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1418,
  serialized_end=1447,
)
_sym_db.RegisterEnumDescriptor(_QUERY_SET_OPERATOR)


_QUERY_ATTRIBUTE = _descriptor.Descriptor(
  name='Attribute',
  full_name='fetch.oef.pb.Query.Attribute',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='fetch.oef.pb.Query.Attribute.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='fetch.oef.pb.Query.Attribute.type', index=1,
      number=2, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='required', full_name='fetch.oef.pb.Query.Attribute.required', index=2,
      number=3, type=8, cpp_type=7, label=2,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='fetch.oef.pb.Query.Attribute.description', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _QUERY_ATTRIBUTE_TYPE,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=40,
  serialized_end=204,
)

_QUERY_DATAMODEL = _descriptor.Descriptor(
  name='DataModel',
  full_name='fetch.oef.pb.Query.DataModel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='fetch.oef.pb.Query.DataModel.name', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attributes', full_name='fetch.oef.pb.Query.DataModel.attributes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='description', full_name='fetch.oef.pb.Query.DataModel.description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=206,
  serialized_end=303,
)

_QUERY_VALUE = _descriptor.Descriptor(
  name='Value',
  full_name='fetch.oef.pb.Query.Value',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='s', full_name='fetch.oef.pb.Query.Value.s', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='f', full_name='fetch.oef.pb.Query.Value.f', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='b', full_name='fetch.oef.pb.Query.Value.b', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i', full_name='fetch.oef.pb.Query.Value.i', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='fetch.oef.pb.Query.Value.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=305,
  serialized_end=373,
)

_QUERY_KEYVALUE = _descriptor.Descriptor(
  name='KeyValue',
  full_name='fetch.oef.pb.Query.KeyValue',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='fetch.oef.pb.Query.KeyValue.key', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='fetch.oef.pb.Query.KeyValue.value', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=375,
  serialized_end=440,
)

_QUERY_INSTANCE = _descriptor.Descriptor(
  name='Instance',
  full_name='fetch.oef.pb.Query.Instance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='fetch.oef.pb.Query.Instance.model', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='values', full_name='fetch.oef.pb.Query.Instance.values', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=442,
  serialized_end=544,
)

_QUERY_STRINGPAIR = _descriptor.Descriptor(
  name='StringPair',
  full_name='fetch.oef.pb.Query.StringPair',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first', full_name='fetch.oef.pb.Query.StringPair.first', index=0,
      number=1, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='second', full_name='fetch.oef.pb.Query.StringPair.second', index=1,
      number=2, type=9, cpp_type=9, label=2,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=546,
  serialized_end=589,
)

_QUERY_INTPAIR = _descriptor.Descriptor(
  name='IntPair',
  full_name='fetch.oef.pb.Query.IntPair',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first', full_name='fetch.oef.pb.Query.IntPair.first', index=0,
      number=1, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='second', full_name='fetch.oef.pb.Query.IntPair.second', index=1,
      number=2, type=3, cpp_type=2, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=591,
  serialized_end=631,
)

_QUERY_FLOATPAIR = _descriptor.Descriptor(
  name='FloatPair',
  full_name='fetch.oef.pb.Query.FloatPair',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='first', full_name='fetch.oef.pb.Query.FloatPair.first', index=0,
      number=1, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='second', full_name='fetch.oef.pb.Query.FloatPair.second', index=1,
      number=2, type=2, cpp_type=6, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=633,
  serialized_end=675,
)

_QUERY_RANGE = _descriptor.Descriptor(
  name='Range',
  full_name='fetch.oef.pb.Query.Range',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='s', full_name='fetch.oef.pb.Query.Range.s', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i', full_name='fetch.oef.pb.Query.Range.i', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='f', full_name='fetch.oef.pb.Query.Range.f', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='pair', full_name='fetch.oef.pb.Query.Range.pair',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=678,
  serialized_end=824,
)

_QUERY_RELATION = _descriptor.Descriptor(
  name='Relation',
  full_name='fetch.oef.pb.Query.Relation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='fetch.oef.pb.Query.Relation.op', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='val', full_name='fetch.oef.pb.Query.Relation.val', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _QUERY_RELATION_OPERATOR,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=827,
  serialized_end=995,
)

_QUERY_SET_VALUES_INTS = _descriptor.Descriptor(
  name='Ints',
  full_name='fetch.oef.pb.Query.Set.Values.Ints',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vals', full_name='fetch.oef.pb.Query.Set.Values.Ints.vals', index=0,
      number=1, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1314,
  serialized_end=1334,
)

_QUERY_SET_VALUES_FLOATS = _descriptor.Descriptor(
  name='Floats',
  full_name='fetch.oef.pb.Query.Set.Values.Floats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vals', full_name='fetch.oef.pb.Query.Set.Values.Floats.vals', index=0,
      number=1, type=2, cpp_type=6, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1336,
  serialized_end=1358,
)

_QUERY_SET_VALUES_STRINGS = _descriptor.Descriptor(
  name='Strings',
  full_name='fetch.oef.pb.Query.Set.Values.Strings',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vals', full_name='fetch.oef.pb.Query.Set.Values.Strings.vals', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1360,
  serialized_end=1383,
)

_QUERY_SET_VALUES_BOOLS = _descriptor.Descriptor(
  name='Bools',
  full_name='fetch.oef.pb.Query.Set.Values.Bools',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='vals', full_name='fetch.oef.pb.Query.Set.Values.Bools.vals', index=0,
      number=1, type=8, cpp_type=7, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1385,
  serialized_end=1406,
)

_QUERY_SET_VALUES = _descriptor.Descriptor(
  name='Values',
  full_name='fetch.oef.pb.Query.Set.Values',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='s', full_name='fetch.oef.pb.Query.Set.Values.s', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='f', full_name='fetch.oef.pb.Query.Set.Values.f', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='b', full_name='fetch.oef.pb.Query.Set.Values.b', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='i', full_name='fetch.oef.pb.Query.Set.Values.i', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUERY_SET_VALUES_INTS, _QUERY_SET_VALUES_FLOATS, _QUERY_SET_VALUES_STRINGS, _QUERY_SET_VALUES_BOOLS, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='values', full_name='fetch.oef.pb.Query.Set.Values.values',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1098,
  serialized_end=1416,
)

_QUERY_SET = _descriptor.Descriptor(
  name='Set',
  full_name='fetch.oef.pb.Query.Set',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='op', full_name='fetch.oef.pb.Query.Set.op', index=0,
      number=1, type=14, cpp_type=8, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='vals', full_name='fetch.oef.pb.Query.Set.vals', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUERY_SET_VALUES, ],
  enum_types=[
    _QUERY_SET_OPERATOR,
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=998,
  serialized_end=1447,
)

_QUERY_CONSTRAINT_CONSTRAINTTYPE_OR = _descriptor.Descriptor(
  name='Or',
  full_name='fetch.oef.pb.Query.Constraint.ConstraintType.Or',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='expr', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.Or.expr', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1868,
  serialized_end=1933,
)

_QUERY_CONSTRAINT_CONSTRAINTTYPE_AND = _descriptor.Descriptor(
  name='And',
  full_name='fetch.oef.pb.Query.Constraint.ConstraintType.And',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='expr', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.And.expr', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1935,
  serialized_end=2001,
)

_QUERY_CONSTRAINT_CONSTRAINTTYPE = _descriptor.Descriptor(
  name='ConstraintType',
  full_name='fetch.oef.pb.Query.Constraint.ConstraintType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='or_', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.or_', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='and_', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.and_', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='set_', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.set_', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='range_', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.range_', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='relation', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.relation', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUERY_CONSTRAINT_CONSTRAINTTYPE_OR, _QUERY_CONSTRAINT_CONSTRAINTTYPE_AND, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='constraint', full_name='fetch.oef.pb.Query.Constraint.ConstraintType.constraint',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1582,
  serialized_end=2015,
)

_QUERY_CONSTRAINT = _descriptor.Descriptor(
  name='Constraint',
  full_name='fetch.oef.pb.Query.Constraint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='attribute', full_name='fetch.oef.pb.Query.Constraint.attribute', index=0,
      number=1, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='constraint', full_name='fetch.oef.pb.Query.Constraint.constraint', index=1,
      number=2, type=11, cpp_type=10, label=2,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_QUERY_CONSTRAINT_CONSTRAINTTYPE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1450,
  serialized_end=2015,
)

_QUERY_MODEL = _descriptor.Descriptor(
  name='Model',
  full_name='fetch.oef.pb.Query.Model',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='constraints', full_name='fetch.oef.pb.Query.Model.constraints', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='model', full_name='fetch.oef.pb.Query.Model.model', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2017,
  serialized_end=2123,
)

_QUERY = _descriptor.Descriptor(
  name='Query',
  full_name='fetch.oef.pb.Query',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_QUERY_ATTRIBUTE, _QUERY_DATAMODEL, _QUERY_VALUE, _QUERY_KEYVALUE, _QUERY_INSTANCE, _QUERY_STRINGPAIR, _QUERY_INTPAIR, _QUERY_FLOATPAIR, _QUERY_RANGE, _QUERY_RELATION, _QUERY_SET, _QUERY_CONSTRAINT, _QUERY_MODEL, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=2123,
)

_QUERY_ATTRIBUTE.fields_by_name['type'].enum_type = _QUERY_ATTRIBUTE_TYPE
_QUERY_ATTRIBUTE.containing_type = _QUERY
_QUERY_ATTRIBUTE_TYPE.containing_type = _QUERY_ATTRIBUTE
_QUERY_DATAMODEL.fields_by_name['attributes'].message_type = _QUERY_ATTRIBUTE
_QUERY_DATAMODEL.containing_type = _QUERY
_QUERY_VALUE.containing_type = _QUERY
_QUERY_VALUE.oneofs_by_name['value'].fields.append(
  _QUERY_VALUE.fields_by_name['s'])
_QUERY_VALUE.fields_by_name['s'].containing_oneof = _QUERY_VALUE.oneofs_by_name['value']
_QUERY_VALUE.oneofs_by_name['value'].fields.append(
  _QUERY_VALUE.fields_by_name['f'])
_QUERY_VALUE.fields_by_name['f'].containing_oneof = _QUERY_VALUE.oneofs_by_name['value']
_QUERY_VALUE.oneofs_by_name['value'].fields.append(
  _QUERY_VALUE.fields_by_name['b'])
_QUERY_VALUE.fields_by_name['b'].containing_oneof = _QUERY_VALUE.oneofs_by_name['value']
_QUERY_VALUE.oneofs_by_name['value'].fields.append(
  _QUERY_VALUE.fields_by_name['i'])
_QUERY_VALUE.fields_by_name['i'].containing_oneof = _QUERY_VALUE.oneofs_by_name['value']
_QUERY_KEYVALUE.fields_by_name['value'].message_type = _QUERY_VALUE
_QUERY_KEYVALUE.containing_type = _QUERY
_QUERY_INSTANCE.fields_by_name['model'].message_type = _QUERY_DATAMODEL
_QUERY_INSTANCE.fields_by_name['values'].message_type = _QUERY_KEYVALUE
_QUERY_INSTANCE.containing_type = _QUERY
_QUERY_STRINGPAIR.containing_type = _QUERY
_QUERY_INTPAIR.containing_type = _QUERY
_QUERY_FLOATPAIR.containing_type = _QUERY
_QUERY_RANGE.fields_by_name['s'].message_type = _QUERY_STRINGPAIR
_QUERY_RANGE.fields_by_name['i'].message_type = _QUERY_INTPAIR
_QUERY_RANGE.fields_by_name['f'].message_type = _QUERY_FLOATPAIR
_QUERY_RANGE.containing_type = _QUERY
_QUERY_RANGE.oneofs_by_name['pair'].fields.append(
  _QUERY_RANGE.fields_by_name['s'])
_QUERY_RANGE.fields_by_name['s'].containing_oneof = _QUERY_RANGE.oneofs_by_name['pair']
_QUERY_RANGE.oneofs_by_name['pair'].fields.append(
  _QUERY_RANGE.fields_by_name['i'])
_QUERY_RANGE.fields_by_name['i'].containing_oneof = _QUERY_RANGE.oneofs_by_name['pair']
_QUERY_RANGE.oneofs_by_name['pair'].fields.append(
  _QUERY_RANGE.fields_by_name['f'])
_QUERY_RANGE.fields_by_name['f'].containing_oneof = _QUERY_RANGE.oneofs_by_name['pair']
_QUERY_RELATION.fields_by_name['op'].enum_type = _QUERY_RELATION_OPERATOR
_QUERY_RELATION.fields_by_name['val'].message_type = _QUERY_VALUE
_QUERY_RELATION.containing_type = _QUERY
_QUERY_RELATION_OPERATOR.containing_type = _QUERY_RELATION
_QUERY_SET_VALUES_INTS.containing_type = _QUERY_SET_VALUES
_QUERY_SET_VALUES_FLOATS.containing_type = _QUERY_SET_VALUES
_QUERY_SET_VALUES_STRINGS.containing_type = _QUERY_SET_VALUES
_QUERY_SET_VALUES_BOOLS.containing_type = _QUERY_SET_VALUES
_QUERY_SET_VALUES.fields_by_name['s'].message_type = _QUERY_SET_VALUES_STRINGS
_QUERY_SET_VALUES.fields_by_name['f'].message_type = _QUERY_SET_VALUES_FLOATS
_QUERY_SET_VALUES.fields_by_name['b'].message_type = _QUERY_SET_VALUES_BOOLS
_QUERY_SET_VALUES.fields_by_name['i'].message_type = _QUERY_SET_VALUES_INTS
_QUERY_SET_VALUES.containing_type = _QUERY_SET
_QUERY_SET_VALUES.oneofs_by_name['values'].fields.append(
  _QUERY_SET_VALUES.fields_by_name['s'])
_QUERY_SET_VALUES.fields_by_name['s'].containing_oneof = _QUERY_SET_VALUES.oneofs_by_name['values']
_QUERY_SET_VALUES.oneofs_by_name['values'].fields.append(
  _QUERY_SET_VALUES.fields_by_name['f'])
_QUERY_SET_VALUES.fields_by_name['f'].containing_oneof = _QUERY_SET_VALUES.oneofs_by_name['values']
_QUERY_SET_VALUES.oneofs_by_name['values'].fields.append(
  _QUERY_SET_VALUES.fields_by_name['b'])
_QUERY_SET_VALUES.fields_by_name['b'].containing_oneof = _QUERY_SET_VALUES.oneofs_by_name['values']
_QUERY_SET_VALUES.oneofs_by_name['values'].fields.append(
  _QUERY_SET_VALUES.fields_by_name['i'])
_QUERY_SET_VALUES.fields_by_name['i'].containing_oneof = _QUERY_SET_VALUES.oneofs_by_name['values']
_QUERY_SET.fields_by_name['op'].enum_type = _QUERY_SET_OPERATOR
_QUERY_SET.fields_by_name['vals'].message_type = _QUERY_SET_VALUES
_QUERY_SET.containing_type = _QUERY
_QUERY_SET_OPERATOR.containing_type = _QUERY_SET
_QUERY_CONSTRAINT_CONSTRAINTTYPE_OR.fields_by_name['expr'].message_type = _QUERY_CONSTRAINT_CONSTRAINTTYPE
_QUERY_CONSTRAINT_CONSTRAINTTYPE_OR.containing_type = _QUERY_CONSTRAINT_CONSTRAINTTYPE
_QUERY_CONSTRAINT_CONSTRAINTTYPE_AND.fields_by_name['expr'].message_type = _QUERY_CONSTRAINT_CONSTRAINTTYPE
_QUERY_CONSTRAINT_CONSTRAINTTYPE_AND.containing_type = _QUERY_CONSTRAINT_CONSTRAINTTYPE
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['or_'].message_type = _QUERY_CONSTRAINT_CONSTRAINTTYPE_OR
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['and_'].message_type = _QUERY_CONSTRAINT_CONSTRAINTTYPE_AND
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['set_'].message_type = _QUERY_SET
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['range_'].message_type = _QUERY_RANGE
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['relation'].message_type = _QUERY_RELATION
_QUERY_CONSTRAINT_CONSTRAINTTYPE.containing_type = _QUERY_CONSTRAINT
_QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint'].fields.append(
  _QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['or_'])
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['or_'].containing_oneof = _QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint']
_QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint'].fields.append(
  _QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['and_'])
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['and_'].containing_oneof = _QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint']
_QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint'].fields.append(
  _QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['set_'])
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['set_'].containing_oneof = _QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint']
_QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint'].fields.append(
  _QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['range_'])
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['range_'].containing_oneof = _QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint']
_QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint'].fields.append(
  _QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['relation'])
_QUERY_CONSTRAINT_CONSTRAINTTYPE.fields_by_name['relation'].containing_oneof = _QUERY_CONSTRAINT_CONSTRAINTTYPE.oneofs_by_name['constraint']
_QUERY_CONSTRAINT.fields_by_name['attribute'].message_type = _QUERY_ATTRIBUTE
_QUERY_CONSTRAINT.fields_by_name['constraint'].message_type = _QUERY_CONSTRAINT_CONSTRAINTTYPE
_QUERY_CONSTRAINT.containing_type = _QUERY
_QUERY_MODEL.fields_by_name['constraints'].message_type = _QUERY_CONSTRAINT
_QUERY_MODEL.fields_by_name['model'].message_type = _QUERY_DATAMODEL
_QUERY_MODEL.containing_type = _QUERY
DESCRIPTOR.message_types_by_name['Query'] = _QUERY

Query = _reflection.GeneratedProtocolMessageType('Query', (_message.Message,), dict(

  Attribute = _reflection.GeneratedProtocolMessageType('Attribute', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_ATTRIBUTE,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Attribute)
    ))
  ,

  DataModel = _reflection.GeneratedProtocolMessageType('DataModel', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_DATAMODEL,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.DataModel)
    ))
  ,

  Value = _reflection.GeneratedProtocolMessageType('Value', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_VALUE,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Value)
    ))
  ,

  KeyValue = _reflection.GeneratedProtocolMessageType('KeyValue', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_KEYVALUE,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.KeyValue)
    ))
  ,

  Instance = _reflection.GeneratedProtocolMessageType('Instance', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_INSTANCE,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Instance)
    ))
  ,

  StringPair = _reflection.GeneratedProtocolMessageType('StringPair', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_STRINGPAIR,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.StringPair)
    ))
  ,

  IntPair = _reflection.GeneratedProtocolMessageType('IntPair', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_INTPAIR,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.IntPair)
    ))
  ,

  FloatPair = _reflection.GeneratedProtocolMessageType('FloatPair', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_FLOATPAIR,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.FloatPair)
    ))
  ,

  Range = _reflection.GeneratedProtocolMessageType('Range', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_RANGE,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Range)
    ))
  ,

  Relation = _reflection.GeneratedProtocolMessageType('Relation', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_RELATION,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Relation)
    ))
  ,

  Set = _reflection.GeneratedProtocolMessageType('Set', (_message.Message,), dict(

    Values = _reflection.GeneratedProtocolMessageType('Values', (_message.Message,), dict(

      Ints = _reflection.GeneratedProtocolMessageType('Ints', (_message.Message,), dict(
        DESCRIPTOR = _QUERY_SET_VALUES_INTS,
        __module__ = 'query_pb2'
        # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Set.Values.Ints)
        ))
      ,

      Floats = _reflection.GeneratedProtocolMessageType('Floats', (_message.Message,), dict(
        DESCRIPTOR = _QUERY_SET_VALUES_FLOATS,
        __module__ = 'query_pb2'
        # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Set.Values.Floats)
        ))
      ,

      Strings = _reflection.GeneratedProtocolMessageType('Strings', (_message.Message,), dict(
        DESCRIPTOR = _QUERY_SET_VALUES_STRINGS,
        __module__ = 'query_pb2'
        # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Set.Values.Strings)
        ))
      ,

      Bools = _reflection.GeneratedProtocolMessageType('Bools', (_message.Message,), dict(
        DESCRIPTOR = _QUERY_SET_VALUES_BOOLS,
        __module__ = 'query_pb2'
        # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Set.Values.Bools)
        ))
      ,
      DESCRIPTOR = _QUERY_SET_VALUES,
      __module__ = 'query_pb2'
      # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Set.Values)
      ))
    ,
    DESCRIPTOR = _QUERY_SET,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Set)
    ))
  ,

  Constraint = _reflection.GeneratedProtocolMessageType('Constraint', (_message.Message,), dict(

    ConstraintType = _reflection.GeneratedProtocolMessageType('ConstraintType', (_message.Message,), dict(

      Or = _reflection.GeneratedProtocolMessageType('Or', (_message.Message,), dict(
        DESCRIPTOR = _QUERY_CONSTRAINT_CONSTRAINTTYPE_OR,
        __module__ = 'query_pb2'
        # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Constraint.ConstraintType.Or)
        ))
      ,

      And = _reflection.GeneratedProtocolMessageType('And', (_message.Message,), dict(
        DESCRIPTOR = _QUERY_CONSTRAINT_CONSTRAINTTYPE_AND,
        __module__ = 'query_pb2'
        # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Constraint.ConstraintType.And)
        ))
      ,
      DESCRIPTOR = _QUERY_CONSTRAINT_CONSTRAINTTYPE,
      __module__ = 'query_pb2'
      # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Constraint.ConstraintType)
      ))
    ,
    DESCRIPTOR = _QUERY_CONSTRAINT,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Constraint)
    ))
  ,

  Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), dict(
    DESCRIPTOR = _QUERY_MODEL,
    __module__ = 'query_pb2'
    # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query.Model)
    ))
  ,
  DESCRIPTOR = _QUERY,
  __module__ = 'query_pb2'
  # @@protoc_insertion_point(class_scope:fetch.oef.pb.Query)
  ))
_sym_db.RegisterMessage(Query)
_sym_db.RegisterMessage(Query.Attribute)
_sym_db.RegisterMessage(Query.DataModel)
_sym_db.RegisterMessage(Query.Value)
_sym_db.RegisterMessage(Query.KeyValue)
_sym_db.RegisterMessage(Query.Instance)
_sym_db.RegisterMessage(Query.StringPair)
_sym_db.RegisterMessage(Query.IntPair)
_sym_db.RegisterMessage(Query.FloatPair)
_sym_db.RegisterMessage(Query.Range)
_sym_db.RegisterMessage(Query.Relation)
_sym_db.RegisterMessage(Query.Set)
_sym_db.RegisterMessage(Query.Set.Values)
_sym_db.RegisterMessage(Query.Set.Values.Ints)
_sym_db.RegisterMessage(Query.Set.Values.Floats)
_sym_db.RegisterMessage(Query.Set.Values.Strings)
_sym_db.RegisterMessage(Query.Set.Values.Bools)
_sym_db.RegisterMessage(Query.Constraint)
_sym_db.RegisterMessage(Query.Constraint.ConstraintType)
_sym_db.RegisterMessage(Query.Constraint.ConstraintType.Or)
_sym_db.RegisterMessage(Query.Constraint.ConstraintType.And)
_sym_db.RegisterMessage(Query.Model)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('H\001'))
# @@protoc_insertion_point(module_scope)
